<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" title="Similar URLs found" width="350" height="200" 
		 addedToStage="addedToStageHandler(event)" 
		 removedFromStage="removedFromStageHandler(event)" 
		 creationComplete="creationCompleteHandler(event)">
	<fx:Metadata>
		[Event(name="select", type="events.URLSelectEvent")]
		[Event(name="cancel", type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import events.URLSelectEvent;
			
			import mx.collections.ArrayList;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.managers.SystemManager;
			
			import spark.components.Application;
			import spark.events.IndexChangeEvent;
			[Bindable]
			public var list:ArrayList;
			static public function display(list:ArrayList):URLSelectPopUp{
				const instance:URLSelectPopUp = new URLSelectPopUp();
				instance.list = list;
				PopUpManager.addPopUp(instance, WebPageUpTimeTracker.instance, true);
				return instance;
			}
			protected function creationCompleteHandler(event:FlexEvent):void{
				PopUpManager.centerPopUp(this);
			}
			protected function addedToStageHandler(event:Event):void{
				this.stage.addEventListener(Event.RESIZE, this.stageResizeHandler);
			}
			protected function removedFromStageHandler(event:Event):void{
				this.stage.removeEventListener(Event.RESIZE, this.stageResizeHandler);
			}
			private function stageResizeHandler(event:Event):void{
				PopUpManager.centerPopUp(this);
			}
			protected function selectButton_clickHandler(event:MouseEvent):void{
				this.dispatchEvent(new URLSelectEvent(URLSelectEvent.SELECT, false, false, this.listDisplay.selectedItem as URLInfo));
				PopUpManager.removePopUp(this);
			}
			protected function cancelButton_clickHandler(event:MouseEvent):void{
				this.dispatchEvent(new Event(Event.CANCEL));
				PopUpManager.removePopUp(this);
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout horizontalAlign="right"/>
	</s:layout>
	<s:Label text="Use new URL you entered or select similar one you logged previously:" width="100%" paddingLeft="5" paddingTop="5" paddingRight="5"/>
	<s:List id="listDisplay" dataProvider="{list}" width="100%" height="100%"/>
	<s:HGroup width="100%" paddingRight="5" paddingBottom="5" horizontalAlign="right">
		<s:Button label="Use Selected URL" enabled="{listDisplay.selectedItem}" click="selectButton_clickHandler(event)"/>
		<s:Button label="Use Entered URL" click="cancelButton_clickHandler(event)"/>
	</s:HGroup>
</s:Panel>
